export enum ImagenOutputFormat {
  JPEG = 'jpeg',
  PNG = 'png',
}

export enum ImagenAspectRatio {
  SQUARE = '1:1',
  ADS = '3:4',
  TV = '4:3',
  LANDSCAPE = '16:9',
  PORTRAIT = '9:16',
}

export enum MimeType {
  JPEG = 'image/jpeg',
  GIF = 'image/gif',
  PNG = 'image/png',
  WEBP = 'image/webp',
  BMP = 'image/bmp',
  TIFF = 'image/tiff',
  ICO = 'image/vnd.microsoft.icon',
}

export enum PersonGeneration {
  ALLOW_ADULT = 'allow_adult',
  DONT_ALLOW = 'dont_allow',
}

export enum SafetySetting {
  BLOCK_LOW_AND_ABOVE = 'block_low_and_above',
  BLOCK_MEDIUM_AND_ABOVE = 'block_medium_and_above',
  BLOCK_ONLY_HIGH = 'block_only_high',
}

export type ImagenRequestInstance = {
  prompt: string;
};

export type ImagenRequestParameters = {
  /**
   * The number of generated images. Accepted integer values:
   * 1-8 (imagen-4.0-fast-generate-preview-06-06),
   * 1-4 (all other model versions). Default value: 4.
   */
  sampleCount?: number;
  /**
   * Optional. Whether to enable a watermark for generated images. Any image
   * generated when the field is set to true contains a digital SynthID that you
   * can use to verify a watermarked image. If you omit this field, the default
   * value of true is used; you must set the value to false to disable this feature.
   * You can use the seed field to get deterministic output only when this field is
   * set to false.
   */
  addWatermark?: boolean;
  /**
   * Optional. A generation mode parameter that controls aspect ratio.
   * Supported ratio values and their intended use:
   * 1:1 (default, square)
   * 3:4 (Ads, social media)
   * 4:3 (TV, photography)
   * 16:9 (landscape)
   * 9:16 (portrait)
   */
  aspectRatio?: ImagenAspectRatio;
  /**
   * Optional. A parameter to use an LLM-based prompt rewriting feature to
   * deliver higher quality images that better reflect the original prompt's
   * intent. Disabling this feature may impact image quality and prompt
   * adherence. Default value: true
   */
  enhancePrompt?: boolean;
  /**
   * Optional. Whether to enable the Responsible AI filtered reason code in
   * responses with blocked input or output. Default value: false.
   */
  includeRaiReason?: boolean;
  /**
   * Optional. Whether to enable rounded Responsible AI scores for a list of
   * safety attributes in responses for unfiltered input and output. Safety
   * attribute categories: "Death, Harm & Tragedy", "Firearms & Weapons", "Hate",
   * "Health", "Illicit Drugs", "Politics", "Porn", "Religion & Belief", "Toxic",
   * "Violence", "Vulgarity", "War & Conflict". Default value: false.
   */
  includeSafetyAttributes?: boolean;
  negativePrompt?: string;
  outputOptions?: {
    /**
     * Optional. The MIME type of the content of the image. Available values:
     * image/jpeg
     * image/gif
     * image/png
     * image/webp
     * image/bmp
     * image/tiff
     * image/vnd.microsoft.icon
     */
    mimeType?: MimeType;
    /**
     * Optional. Only applies to JPEG output files. The level of detail the model
     * preserves for images generated in JPEG file format. Values: 0 to 100,
     * where a higher number means more compression. Default: 75.
     */
    compressionQuality?: number;
  };
  /**
   * Optional. The safety setting that controls the type of people or face
   * generation the model allows. Available values:
   * allow_adult (default): Allow generation of adults only, except for celebrity generation. Celebrity generation is not allowed for any setting.
   * dont_allow: Disable the inclusion of people or faces in generated images.
   */
  personGeneration?: PersonGeneration;
  /**
   * Optional. A setting that controls safety filter thresholds for generated images.
   * Available values:
   * block_low_and_above: The highest safety threshold, resulting in the largest amount of generated images that are filtered. Previous value: block_most.
   * block_medium_and_above (default): A medium safety threshold that balances filtering for potentially harmful and safe content. Previous value: block_some.
   * block_only_high: A safety threshold that reduces the number of requests blocked due to safety filters. This setting might increase objectionable content generated by Imagen. Previous value: block_few.
   */
  safetySetting?: SafetySetting;
  /**
   * Optional. The Cloud Storage bucket to store the output images. If not
   * provided, base64-encoded image bytes are returned in the response.
   * Sample value: gs://image-bucket/output/.
   */
  storageUri?: string;
};

export type GenerateImageOptions = {
  prompt: string;
  aspectRatio: ImagenAspectRatio;
  personGeneration: PersonGeneration;
  promptRewriting: boolean;
  negativePrompt?: string;
  userId: string;
  requestId: string;
};

export type ImagenPrediction = {
  gcsUri: string;
  mimeType: string;
  prompt: string;
};

export type ImagenResponse = {
  predictions: ImagenPrediction[];
};
