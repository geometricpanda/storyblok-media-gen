// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id              String    @id @default(cuid())
  name            String?
  accounts        Account[]
  imageRequests   ImageRequest[]
  videoRequests   VideoRequest[]
}

model ImageRequest {
  id               String   @id @default(cuid())
  prompt           String
  aspectRatio      String
  promptRewriting  Boolean
  personGeneration String
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model VideoRequest {
  id               String   @id @default(cuid())
  prompt           String
  negativePrompt   String?
  playTime         Int
  promptRewriting  Boolean
  startingImage    String?
  personGeneration String
  aspectRatio      String
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
